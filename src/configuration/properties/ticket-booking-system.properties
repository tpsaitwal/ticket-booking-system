spring.datasource.url=jdbc:oracle:thin:@localhost:1521:XE
spring.datasource.username=system
spring.datasource.password=admin
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver

rest.basepath=/tbs
rest.show.availabilty=/currstateoftkts
rest.show.book.tkts=/booktkts
rest.show.payment.status=/paymentstatus

select.rows.and.columns=select S_ROWS, S_COLUMNS, S.S_ID from THEATER t, CITY c, SHOW s, MOVIE m WHERE t.C_ID = c.C_ID AND s.T_ID = t.T_ID AND s.M_ID = m.M_ID AND c.C_NAME = :cityname AND t.T_NAME = :theatername AND m.M_NAME = :moviename AND s.S_DATETIME = to_date(:showdate, 'DD-MM-YYYY HH24:MI')
select.showid.theaterid.for.booking=select s.S_ID, s.S_PRICE, t.T_ID from THEATER t, CITY c, SHOW s, MOVIE m WHERE t.C_ID = c.C_ID AND s.T_ID = t.T_ID AND s.M_ID = m.M_ID AND c.C_NAME = :cityname AND t.T_NAME = :theatername AND m.M_NAME = :moviename AND s.S_DATETIME = to_date(:showdate, 'DD-MM-YYYY HH24:MI')
insert.booking.sql=INSERT INTO BOOKING (B_ID, S_ID, SEAT_IDS, B_AMOUNT, B_STATUS, B_DATE, T_ID) VALUES (:bookingid, :showid, :seatids, :amount , :bookingstatus, systimestamp, :theaterid)
update.booking.status=update BOOKING set B_STATUS = :bookingstatus where B_ID = :bookingid
seat.state.from.showid=SELECT distinct SEAT_IDS, B_STATUS FROM BOOKING WHERE S_ID = :showid AND B_STATUS IN (:statuses)
seat.booking.update.status.query=update BOOKING set B_STATUS =:expectedstatus where B_DATE <= ( SYSTIMESTAMP - NUMTODSINTERVAL(10, 'MINUTE')) AND B_STATUS = :currstatus
show.date.query.format=dd-MM-yyyy HH:mm
show.date.rest.format=dd-MM-yyyy-HH-mm
show.date.rest.regular.expression=\\d{2}-\\d{2}-\\d{4}-\\d{2}-\\d{2}
#milliseconds
waiting.msec.booking.retry=600000
#Every 5 minutes
update.status.of.bookings.cron=0 0/5 * * * ?